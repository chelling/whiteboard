<head>
    <title>Foo-nation Baseball</title>
    <%= javascript_include_tag "application" %>
</head>
<body style="background-color: black;">
<script type="text/javascript">

    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-43268283-1']);
    _gaq.push(['_setDomainName', 'foo-nation.com']);
    _gaq.push(['_trackPageview']);

    (function() {
        var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
        ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();

</script>
<script>
  window.onload = function() {
      build_baseball_table();
  };

  function build_baseball_table(){
      var xhttp = new XMLHttpRequest();
      xhttp.onreadystatechange = function() {
          if(xhttp.readyState == 4 && xhttp.status == 200) {
              document.getElementById("main-baseball").innerHTML = xhttp.responseText;
              bindRows();
              //bindRows2();
              orderTableByTotal();
          }
      };
      xhttp.open("GET", "https://munleyixbl.execute-api.us-east-1.amazonaws.com/prod", true);
      xhttp.setRequestHeader("Content-type", "application/x-www-form-urlencoded");
      xhttp.send();
  }

  function togglePlayerRow() {
      child = $(this).next();

      while((el = child) && el.attr("class") != "user-table" && el.tagName != 'html' && el.size() > 0) {
          el.toggle();
          child = el.next();
      }
  }

  function toggleStatsRowOn() {
      $(this).find(".player-table").removeClass('dont-show');
      $(this).find(".player-totals").removeClass('dont-show');
      $(this).unbind();
      $('.player-stats').on("click", toggleStatsRowOff);
  }

  function toggleStatsRowOff() {
      $(this).find(".player-table").addClass('dont-show');
      $(this).find(".player-totals").addClass('dont-show');
      $('.player-totals-season').removeClass('dont-show');
      $(this).unbind();
      $('.player-stats').on("click", toggleStatsRowOn);

      $('.player-totals').each(function() {
          previous_row = $(this).prev();
          if(previous_row.attr("class") != undefined && previous_row.attr("class").indexOf('player-table') > -1) {
              previous_row.addClass('recent-game')
          }
      });

      $('.recent-game').removeClass('dont-show');
  }

  function bindRows() {
      $('.player-table').addClass('dont-show');
      $('.player-totals').addClass('dont-show');
      $('.player-totals-season').removeClass('dont-show');
      $('.player-stat-table').addClass('dont-show');
      $('.user-table').on("click", togglePlayerRow);
      $('.player-stats').on("click", toggleStatsRowOn);

      $('.main-categories th').each(function() {
          if($(this).text() != 'USER'){
              $(this).on("click", orderTableByTotal);
          }
      });

      $('.player-totals').each(function() {
          previous_row = $(this).prev();
          if(previous_row.attr("class") != undefined && previous_row.attr("class").indexOf('player-table') > -1) {
            previous_row.addClass('recent-game')
          }
      });

      $('.recent-game').removeClass('dont-show');
  }

  function bindRows2() {
      $('.player-totals').addClass('dont-show');
      $('.player-categories').addClass('dont-show');
      $('.sub-col').addClass('dont-show');
      $('.player-stat-table').each(function() {
          el = $(this);
         $(this).find('th').each(function(){
            if($(this).text().indexOf('--') >= 0){
                el.addClass('dont-show');
            }
         });
      });
  }

    function orderTableByTotal() {
        category = $(this).text();
        if(category == undefined || category.length <= 0 ) {
            category = 'TOT';
        }
        i = 0;
        while(i < 15) {
            $('.user-table').each(function () {

                var full_val = $(this).find('*[data-col-name="' + category + '"]').text();
                var split_val = full_val.split('(');

                if (split_val.length > 1) {
                    split_val = split_val[1].split(')')[0];
                }
                var cur_val = parseInt(split_val);

                var greater_el = findGreaterThanPosition(this, cur_val, category);
                if (greater_el != undefined) {
                    cutBeforeGreaterEl(this, greater_el);
                }
                var lesser_el = findLessThanPosition(this, cur_val, category);
                if (lesser_el != undefined) {
                    cutAfterLessEl(this, lesser_el);
                }
            });
            i += 1;
        }
    }

    function findGreaterThanPosition(tr, cur_val, category) {
        child = $(tr).next();

        while((el = child) && el.attr("class") != "user-table" && el.tagName != 'html' && el.size() > 0) {
            child = el.next();
        }

        if(el.attr("class") == "user-table") {
            var full_val = $(el).find('*[data-col-name="' + category + '"]').text();
            var split_val = full_val.split('(');

            if(split_val.length > 1) {
                split_val = split_val[1].split(')')[0];
            }
            var new_val = parseInt(split_val);

            if(cur_val > new_val) {
                findGreaterThanPosition(el, cur_val);
            } else {
                return el;
            }
        }
    }

    function cutBeforeGreaterEl(el, greater_el) {
        var el_array = [];
        previous_el = greater_el.prev();

        el_array.push(el);

        child = $(el).next();

        while((tr = child) && tr.attr("class") != "user-table" && tr.tagName != 'html' && tr.size() > 0) {
            el_array.push(tr);
            child = tr.next();
        }

        el_array.forEach(function(entry) {
            $(entry).insertAfter(previous_el);
            previous_el = entry;
        });
    }

  function findLessThanPosition(tr, cur_val, category) {
      child = $(tr).prev();

      while((el = child) && el.attr("class") != "user-table" && el.tagName != 'html' && el.size() > 0) {
          child = el.prev();
      }

      if(el.attr("class") == "user-table") {
          var full_val = $(el).find('*[data-col-name="' + category + '"]').text();
          var split_val = full_val.split('(');

          if(split_val.length > 1) {
              split_val = split_val[1].split(')')[0];
          }
          var new_val = parseInt(split_val);

          if(cur_val < new_val) {
              findLessThanPosition(el, cur_val);
          } else {
              return el;
          }
      }
  }

  function cutAfterLessEl(el, lesser_el) {
      var el_array = [];
      previous_el = lesser_el;

      el_array.push(el);

      child = $(el).next();

      while((tr = child) && tr.attr("class") != "user-table" && tr.tagName != 'html' && tr.size() > 0) {
          el_array.push(tr);
          child = tr.next();
      }

      el_array.reverse().forEach(function(entry) {
          $(entry).insertBefore(previous_el);
          previous_el = entry;
      });
  }

</script>

<div id="main-baseball">

</div>
</body>